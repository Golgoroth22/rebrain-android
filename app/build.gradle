apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.falin.valentin.foodapp"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    /* Kotlin */
    implementation deps.kotlin.stdlib
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    /* UI */
    implementation "androidx.appcompat:appcompat:$androidx_ktx"
    implementation "androidx.constraintlayout:constraintlayout:$constraint"
    implementation "androidx.legacy:legacy-support-v4:$androidx"
    implementation "com.google.android.material:material:$androidx"
    implementation "androidx.core:core-ktx:$androidx_ktx"

    /* Dagger 2 */
    implementation "com.google.dagger:dagger:$dagger2"
    implementation "com.google.dagger:dagger-android:$dagger2"
    implementation "com.google.dagger:dagger-android-support:$dagger2"
    kapt "com.google.dagger:dagger-compiler:$dagger2"
    kapt "com.google.dagger:dagger-android-processor:$dagger2"

    /* Firebase */
    implementation "com.google.firebase:firebase-messaging:$firebase_messaging"
    implementation "com.google.firebase:firebase-storage-ktx:$firebase_storage"

    /* OkHttp */
    implementation "com.squareup.okhttp3:okhttp:$okhttp"

    /* Glide */
    implementation "com.github.bumptech.glide:glide:$glide"

    /* Anko */
    implementation "org.jetbrains.anko:anko:$anko"

    /* Lifecycle */
    implementation "android.arch.lifecycle:extensions:$lifecycle"
    kapt "android.arch.lifecycle:compiler:$lifecycle"

    /* Moshi */
    implementation "com.squareup.moshi:moshi:$moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi"

    /* Network */
    implementation "com.squareup.retrofit2:retrofit:$retrofit2"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit2_moshi_conv"

    /* Timber */
    implementation "com.jakewharton.timber:timber:$timber"

    /* Tests */
    testImplementation "junit:junit:$junit"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp"
    androidTestImplementation "androidx.test:runner:$test_runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$test_espresso_core"
}
